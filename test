import pytz


from botocore.exceptions import ClientError

def get_value(date, value_type):
    if value_type == 'prediction':
        key = f"{date.year}/{date.month}/{date.day}/prediction.txt"
    if value_type == 'actual':
        key = f"{date.year}/{date.month}/{date.day}/max_temp.txt"
    s3 = boto3.client('s3')
    try:
        obj = s3.get_object(Bucket="weather-bvmcode", Key=key)
    except ClientError:
        return None
    return round(float(obj['Body'].read().decode('utf-8')),1)


@project_bp.route("/predict")
def project4():
    utc_date = datetime.utcnow().replace(tzinfo=pytz.utc)
    dt = utc_date.astimezone(pytz.timezone('US/Eastern')).date()
    dt_prev = dt + timedelta(days=-1)

    prediction = get_value(dt, 'prediction')
    prediction_prev_day = get_value(dt_prev, 'prediction')
    actual_prev_day = get_value(dt_prev, 'actual')

    return render_template(
        "project4.html", title="\\\\Weather Station\\\\", title_img="weather.jpg",
        prediction=prediction,
        prediction_prev_day=prediction_prev_day,
        actual_prev_day=actual_prev_day
    )